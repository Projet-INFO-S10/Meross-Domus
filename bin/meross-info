#!/usr/bin/env node

'use strict'

const {version} = require('../package.json')
const program = require('commander')
const util = require('util')

const API = require('../lib/api')

const collection = (value, store = []) => {
    store.push(value)
    return store
}

const unique = (array) => [...new Set(array)]

program
  .version(version)
  .arguments('<options>')
  .option('-g, --gateway <gateway>', 'Set the gateway address', '10.10.10.1')
  .option('-u, --user <user-id>', 'Integer id. Only useful for connecting to Meross Cloud.', parseInt)
  .option('-k, --key <shared-key>', 'Shared key for generating signatures', '')
  .option('--include-wifi', 'Ask device for Nearby WIFI AP list')
  .option('--on', "Switch on the switch")
  .option('--off', "Switch off the switch")
  .option('--list', "Ask for the list of available data on the topic")
  .option('--history', "Ask for the history of the power consumption")
  .option('--power', "Ask for the current power of the switch")
  .option('-v, --verbose', 'Show debugging messages', '')
  .parse(process.argv)

const options = program.opts();
if (!options.gateway) {
    console.error('Gateway must be specified')
    process.exit(1)
}

(async () => {
    const gateway = options.gateway
    const key = options.key
    const includeWifiList = options.includeWifi
    const verbose = options.verbose
    const api = new API(gateway, key, null, verbose)

    console.log(`Getting info about device with IP ${gateway}`)
   
    if(options.on){
        //switch on the ligth
        await api.switchOn()
    }
    if(options.off){
        //switch off the ligth
        await api.switchOff()
    }
    if(options.list){
        //list
        await api.listAvailable()
    }
    if(options.power){
        //ask for power
        await api.currentElectricty()
    }
    if(options.history){
        //ask for history
       await api.consumption()
    }
    
    console.log("Device information")
    await api.deviceInformation()
    

    if (includeWifiList) {
        console.log("Include the device Wifi list")
        await api.deviceWifiList()
    }
})()
