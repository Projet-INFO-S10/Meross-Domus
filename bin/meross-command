#!/usr/bin/env node

'use strict'

const {version} = require('../package.json')
const program = require('commander')
const util = require('util')
const readline = require('readline').createInterface({
    input: process.stdin,
    output: process.stdout
  });

const API = require('../lib/api')
const { Readline } = require('readline/promises');
const { read } = require('fs');

const collection = (value, store = []) => {
    store.push(value)
    return store
}

const unique = (array) => [...new Set(array)]

program
  .version(version)
  .arguments('<options>')
  .option('-g, --gateway <gateway>', 'Set the gateway address', '10.10.10.1')
  .option('-u, --user <user-id>', 'Integer id. Only useful for connecting to Meross Cloud.', parseInt)
  .option('-k, --key <shared-key>', 'Shared key for generating signatures', '')
  .option('--include-wifi', 'Ask device for Nearby WIFI AP list')
  .option('--on', "Switch on the switch")
  .option('--off', "Switch off the switch")
  .option('--list', "Ask for the list of available data on the topic")
  .option('--history', "Ask for the history of the power consumption")
  .option('--power', "Ask for the current power of the switch")
  .option('-v, --verbose', 'Show debugging messages', '')
  .parse(process.argv)

const options = program.opts();
if (!options.gateway) {
    console.error('Gateway must be specified')
    process.exit(1)
}

function question(prompt) {
    return new Promise(resolve => {
        readline.question(prompt, resolve);
    });
}

(async () => {
    var exit = false

    const gateway = await question("Please enter the IP address of the Meross Outlet: ")
    const key = options.key
    const includeWifiList = options.includeWifi
    const verbose = options.verbose
    const api = new API(gateway, key, null, verbose)
    console.log(`\nGetting info about device with IP ${gateway}`)
    await api.deviceInformation()

    while(!exit){
        console.log("\nList of the available commands:\n")
        console.log("on: switch on the poweroutlet")
        console.log("off: switch off the poweroutlet")
        console.log("list: ask for the list of available data on the topic")
        console.log("history: ask for the history of the power consumption")
        console.log("power: ask for the current power of the device")
        console.log("info: ask for the info of the device")
        console.log("exit: exit the program\n")
        
        const command = await question('Enter a command: ');
       
        if(command === "on"){
            //switch on the ligth
            await api.switchOn()
        }
        if(command === "off"){
            //switch off the ligth
            await api.switchOff()
        }
        if(command === "list"){
            //list
            await api.listAvailable()
        }
        if(command === "power"){
            //ask for power
            await api.currentElectricty()
        }
        if(command === "history"){
            //ask for history
            await api.consumption()
        }
        if(command === "info"){
            //ask for history
            await api.deviceInformation()
        }        
        if (includeWifiList) {
            console.log("Include the device Wifi list")
            // await api.deviceWifiList()
        }
        if(command === "exit"){
            exit = true
        }
    }
    readline.close();
})()
